[ {
  "name" : "webanno.custom.IGCoreConstitutiveComponentRelationship",
  "features" : [ {
    "name" : "Exhaustive",
    "tag_set" : null,
    "uiName" : "Exhaustive",
    "type" : "uima.cas.Boolean",
    "enabled" : true,
    "visible" : false,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Indicates that relationships are exhaustive (i.e., statement does not use terms that signal open-ended relationships, such as \"including\", but lists all possible alternatives)",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : null
  }, {
    "name" : "LogicalRelationship",
    "tag_set" : {
      "name" : "IG Component Relationships",
      "description" : "Logical Component Relationships",
      "language" : null,
      "tags" : [ {
        "tag_name" : "AND",
        "tag_description" : "Indicates AND relationship, i.e., conjunction of components. The relationship is undirected."
      }, {
        "tag_name" : "AND NOT",
        "tag_description" : "Describes a combination of statements, where the occurrence of the action specified in the first statement is combined with the non-occurrence of the action specified in the second statement. The relationship is directed; the target is the non-occurring action statement."
      }, {
        "tag_name" : "AND/OR",
        "tag_description" : "Indicates AND/OR relationship (OR) in which both components may apply, or either one of those, i.e., an inclusive disjunction. The relationship is undirected."
      }, {
        "tag_name" : "Child-to-Parent Relationship (Target is Parent)",
        "tag_description" : "Identifies a parent-child relationship between elements, with the parent being the element defined or composed, and the child its component or property.\r\nThis relationship type applies to various forms of annotations, but most notably to \r\n- component-level combinations (logical combinations of same components)\r\n- relationships between objects and properties, and\r\n- properties and sub-properties (Object-Property Hierarchy)."
      }, {
        "tag_name" : "NOR",
        "tag_description" : "Describes a NEITHER-NOR (NOR) relationship of components, where the non-occurrence of the first component is combined with the non-occurrence of the second component of the same type. The relationship is undirected."
      }, {
        "tag_name" : "XOR",
        "tag_description" : "Indicates an EITHER-OR (XOR) relationship, i.e., exclusive disjunction. The relationship is undirected."
      } ],
      "create_tag" : true
    },
    "uiName" : "Logical Relationship",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Indicates type of logical relationship amongst components",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[{\"keyCombo\":\"a\",\"value\":\"AND\"},{\"keyCombo\":\"o\",\"value\":\"AND/OR\"},{\"keyCombo\":\"x\",\"value\":\"XOR\"},{\"keyCombo\":\"m\",\"value\":\"AND NOT\"},{\"keyCombo\":\"N\",\"value\":\"NOR\"},{\"keyCombo\":\"p\",\"value\":\"Child-to-Parent Relationship (Target is Parent)\"}]}"
  }, {
    "name" : "PrecedenceofComponentCombinations",
    "tag_set" : null,
    "uiName" : "Precedence of Component Combinations",
    "type" : "uima.cas.Integer",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Indicates precedence among component relationships. Lower values imply lower precedence/priority.",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"limited\":true,\"minimum\":1,\"maximum\":99,\"editorType\":\"SPINNER\"}"
  }, {
    "name" : "Separable",
    "tag_set" : null,
    "uiName" : "Separable",
    "type" : "uima.cas.Boolean",
    "enabled" : true,
    "visible" : false,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Indicates whether logically-linked elements can be separated for analytical purposes, or whether they are only used in conjunction (e.g., fish and chips, Smith and Sons).",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : null
  } ],
  "uiName" : "IG Core Constitutive Component Relationship",
  "type" : "relation",
  "description" : "Captures logical relationships between institutional grammar components of the same type (e.g., multiple constituting properties or constituted entities).",
  "enabled" : true,
  "built_in" : false,
  "readonly" : false,
  "attach_type" : {
    "name" : "webanno.custom.IGCoreConstitutiveSyntax"
  },
  "attach_feature" : null,
  "allow_stacking" : true,
  "cross_sentence" : true,
  "show_hover" : true,
  "anchoring_mode" : "TOKENS",
  "overlap_mode" : "ANY_OVERLAP",
  "validation_mode" : "ALWAYS",
  "lock_to_token_offset" : false,
  "multiple_tokens" : true,
  "project_name" : "IG-Inception-Layer Development",
  "linked_list_behavior" : false,
  "on_click_javascript_action" : null,
  "traits" : null
}, {
  "name" : "webanno.custom.IGCoreConstitutiveSyntax",
  "features" : [ {
    "name" : "AbstractvsConcrete",
    "tag_set" : {
      "name" : "IG Entity Characteristic",
      "description" : "Indicates the nature of the entity characteristics",
      "language" : null,
      "tags" : [ {
        "tag_name" : "abstract",
        "tag_description" : "Signals an abstract entity (e.g., thought, institutional statement, etc.)"
      }, {
        "tag_name" : "concrete",
        "tag_description" : "Indicates a concrete physical entity"
      } ],
      "create_tag" : true
    },
    "uiName" : "Abstract vs. Concrete",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Indicates entity as either abstract (e.g., conceptual) or concrete (physical) in kind.",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"dynamicSize\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[]}"
  }, {
    "name" : "AdditionalLabels",
    "tag_set" : null,
    "uiName" : "Additional Label(s)",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Identifies additional custom labels. Signal labels as key-value pairs (e.g., key=value) and separate multiple labels by | (e.g., key1=value|key2=value).",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[]}"
  }, {
    "name" : "Animacy",
    "tag_set" : {
      "name" : "IG Animacy",
      "description" : "Tags indicating animacy",
      "language" : null,
      "tags" : [ {
        "tag_name" : "animate",
        "tag_description" : "Indicates animate entity"
      }, {
        "tag_name" : "inanimate",
        "tag_description" : "Indicates inanimate entity"
      } ],
      "create_tag" : true
    },
    "uiName" : "Animacy",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : true,
    "description" : "Animacy annotation for specific component types",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[]}"
  }, {
    "name" : "Component",
    "tag_set" : {
      "name" : "IG Core Constitutive Components",
      "description" : "IG Core Component Annotations for Constitutive Components",
      "language" : null,
      "tags" : [ {
        "tag_name" : "(Cac) Activation Condition",
        "tag_description" : "Conditions describe circumstance under which constitutive statements apply"
      }, {
        "tag_name" : "(Cex) Execution Constraint",
        "tag_description" : "Execution constraints describe qualifications of the constitutive function or offer further contextual characterization."
      }, {
        "tag_name" : "(E) Constituted Entity",
        "tag_description" : "Entity that is defined or modified by constitutive statement"
      }, {
        "tag_name" : "(E, prop) Constituted Entity Property",
        "tag_description" : "Property associated with constituted entity"
      }, {
        "tag_name" : "(F) Constitutive Function",
        "tag_description" : "Functionally constitutes a Constituted Entity (with or without reference to constituting properties)"
      }, {
        "tag_name" : "(M) Modal",
        "tag_description" : "A modal operator that signals the necessity (often: shall) or (im-)possibility (often: may) of the action captured in the constitutive function in an epistemic sense (in contrast to the deontic sense for regulative statements)."
      }, {
        "tag_name" : "(P) Constituting Property",
        "tag_description" : "Constituting Properties capture related or constituent properties that are linked to the constituted entity via the constituting function. It is polymorphic in nature and dependent on the applied constitutive function."
      }, {
        "tag_name" : "(P, prop) Constituting Property Property",
        "tag_description" : "Property of the Constituting Property (e.g., object property if constituting property is an object)"
      } ],
      "create_tag" : true
    },
    "uiName" : "Component",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Constitutive Statement Component Type",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"dynamicSize\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[{\"keyCombo\":\"e\",\"value\":\"(E) Constituted Entity\"},{\"keyCombo\":\"r\",\"value\":\"(E, prop) Constituted Entity Property\"},{\"keyCombo\":\"f\",\"value\":\"(F) Constitutive Function\"},{\"keyCombo\":\"p\",\"value\":\"(P) Constituting Property\"},{\"keyCombo\":\"o\",\"value\":\"(P, prop) Constituting Property Property\"},{\"keyCombo\":\"c\",\"value\":\"(Cac) Activation Condition\"},{\"keyCombo\":\"x\",\"value\":\"(Cex) Execution Constraint\"},{\"keyCombo\":\"m\",\"value\":\"(M) Modal\"}]}"
  }, {
    "name" : "ConstitutiveFunction",
    "tag_set" : {
      "name" : "IG Constitutive Functions",
      "description" : "Constitutive functions (as a specialization of institutional functions in the context of constitutive statements) characterize the functional semantics of constitutive function annotations with respect to the linkage of the constituted entity and, where existing, constituting properties, or contextual aspects.",
      "language" : null,
      "tags" : [ {
        "tag_name" : "(Conferral) Liability",
        "tag_description" : "References the conferral of a liability"
      }, {
        "tag_name" : "(Conferral) Power",
        "tag_description" : "References the conferral of authority or other forms of power or competence."
      }, {
        "tag_name" : "(Conferral) Right",
        "tag_description" : "References the conferral of a right"
      }, {
        "tag_name" : "(Conferral) Status",
        "tag_description" : "Indicates conferral of status - this category is more general than other conferral characterizations, and may include status conferrals that do not come with power, rights, or liabilities."
      }, {
        "tag_name" : "(Definition) Definition",
        "tag_description" : "Defines an entity (e.g., actor, object, role, action, policy) intensionally (e.g., \"is\", \"counts as\") or extensionally (e.g., by what it does)."
      }, {
        "tag_name" : "(Definition) Modification",
        "tag_description" : "Modifies entity by ascribing additional properties or features (abilities)"
      }, {
        "tag_name" : "(Lifecycle) Creation",
        "tag_description" : "Annotates the creation of the constituted entity, such as object or policy (e.g., \"established\")"
      }, {
        "tag_name" : "(Lifecycle) Termination",
        "tag_description" : "Indicates the termination of the constituted entity, such as object or policy (e.g., \"terminated\")"
      }, {
        "tag_name" : "Composition",
        "tag_description" : "Signals that the constituted entity is composed of the elements described in constituting properties"
      }, {
        "tag_name" : "Information",
        "tag_description" : "Indicates a purely informational statement without immediate constitutive weight"
      }, {
        "tag_name" : "Organization",
        "tag_description" : "Signals the embedding of the constituted entity in some structure (e.g., organization)"
      }, {
        "tag_name" : "Policy Relationship",
        "tag_description" : "Indicates that (and how) this policy is related to another policy (e.g., \"amends\", \"substitutes\")"
      }, {
        "tag_name" : "Purpose/Intent",
        "tag_description" : "Signals the specification of a purpose or intent associated with the constituted entity (e.g., a policy)"
      } ],
      "create_tag" : true
    },
    "uiName" : "Constitutive Function Type",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : true,
    "description" : "Indicates type of constitutive function",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[]}"
  }, {
    "name" : "Circumstance",
    "tag_set" : {
      "name" : "IG Context Taxonomy",
      "description" : "Tags indicating context categories",
      "language" : null,
      "tags" : [ {
        "tag_name" : "(Method) Instrument",
        "tag_description" : "Method in the form of an instrument - Reference to instrument (e.g., artifact, tool) mediating activity"
      }, {
        "tag_name" : "(Method) Means",
        "tag_description" : "Method in the form of (non-instrumental) means - Reference to non-instrumental means or manners mediating activity"
      }, {
        "tag_name" : "(Spatial) Direction",
        "tag_description" : "Direction - References to directions (e.g., towards), including intermediary locations (e.g., “via”)"
      }, {
        "tag_name" : "(Spatial) Location",
        "tag_description" : "Location - References to specific (e.g., Main Street) or abstract (e.g., on top of the building) locations"
      }, {
        "tag_name" : "(State) State",
        "tag_description" : "State - References a specific state"
      }, {
        "tag_name" : "(State) State Transition/Process",
        "tag_description" : "State Transition/Process - References a change in state or a process reflecting change in state"
      }, {
        "tag_name" : "(Temporal) Beginning",
        "tag_description" : "Time Frame - Indicates the beginning of a time frame"
      }, {
        "tag_name" : "(Temporal) End",
        "tag_description" : "Time Frame - Indicates the end of a time frame"
      }, {
        "tag_name" : "(Temporal) Frequency",
        "tag_description" : "Temporal Frequency - Indicates recurrent activities (e.g., annually)"
      }, {
        "tag_name" : "(Temporal) Point in Time",
        "tag_description" : "Point in time - References to specific points in time"
      }, {
        "tag_name" : "(Temporal) Time Frame",
        "tag_description" : "Time Frame - References to time frames"
      }, {
        "tag_name" : "Domain",
        "tag_description" : "Domain - Conditions/Constraints applying to a specified activity, topical, or other conceptual realm."
      }, {
        "tag_name" : "Event",
        "tag_description" : "Event - References an event. In contrast to states (which can be long-lasting), events are instantaneous."
      }, {
        "tag_name" : "Exception",
        "tag_description" : "Exception - Expression of exception to general rule (e.g., \"unless ...\"). It is a general category, applied if no other, more specific characterization holds."
      }, {
        "tag_name" : "Procedural Order",
        "tag_description" : "Procedural Order - Context specifications associated with explicit or implied execution order, i.e., performing one action depends on completion of another"
      }, {
        "tag_name" : "Purpose/Function",
        "tag_description" : "Purpose/Function - Conditions/Constraints describing the purpose or intent of an aim"
      } ],
      "create_tag" : true
    },
    "uiName" : "Context Category",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : true,
    "description" : "Characterizes context categories in constitutive statements",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"dynamicSize\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[]}"
  }, {
    "name" : "Describespolicynotentity",
    "tag_set" : {
      "name" : "IG Constituted Policy vs Entity",
      "description" : "Includes options for annotating constituted entities as self-referential with respect to the policy characterized, an external policy (i.e., a policy outside of the regulation or initiated in the context of the regulation), or an entity/object that is affected by the regulation, respectively.",
      "language" : null,
      "tags" : [ {
        "tag_name" : "Entity",
        "tag_description" : "Indicates that the constituted entity is an entity/object"
      }, {
        "tag_name" : "Policy (external)",
        "tag_description" : "Indicates that the constituted entity is a policy, but not the policy of the encoded document itself (i.e., is not self-referential)."
      }, {
        "tag_name" : "Policy (self-referential)",
        "tag_description" : "Indicates that the constituted entity is the policy itself (i.e., is self-referential)."
      } ],
      "create_tag" : true
    },
    "uiName" : "Describes policy (not entity)",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : true,
    "description" : "Indicates whether this statement describes the policy it is embedded in (self-referential), as opposed to an entity/object, where the entity/object may also be a(nother) policy.",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[{\"keyCombo\":\"e\",\"value\":\"Entity\"},{\"keyCombo\":\"p\",\"value\":\"Policy (self-referential)\"},{\"keyCombo\":\"x\",\"value\":\"Policy (external)\"}]}"
  }, {
    "name" : "EmbedsLogicalCombination",
    "tag_set" : {
      "name" : "IG Component Relationships",
      "description" : "Logical Component Relationships",
      "language" : null,
      "tags" : [ {
        "tag_name" : "AND",
        "tag_description" : "Indicates AND relationship, i.e., conjunction of components. The relationship is undirected."
      }, {
        "tag_name" : "AND NOT",
        "tag_description" : "Describes a combination of statements, where the occurrence of the action specified in the first statement is combined with the non-occurrence of the action specified in the second statement. The relationship is directed; the target is the non-occurring action statement."
      }, {
        "tag_name" : "AND/OR",
        "tag_description" : "Indicates AND/OR relationship (OR) in which both components may apply, or either one of those, i.e., an inclusive disjunction. The relationship is undirected."
      }, {
        "tag_name" : "Child-to-Parent Relationship (Target is Parent)",
        "tag_description" : "Identifies a parent-child relationship between elements, with the parent being the element defined or composed, and the child its component or property.\r\nThis relationship type applies to various forms of annotations, but most notably to \r\n- component-level combinations (logical combinations of same components)\r\n- relationships between objects and properties, and\r\n- properties and sub-properties (Object-Property Hierarchy)."
      }, {
        "tag_name" : "NOR",
        "tag_description" : "Describes a NEITHER-NOR (NOR) relationship of components, where the non-occurrence of the first component is combined with the non-occurrence of the second component of the same type. The relationship is undirected."
      }, {
        "tag_name" : "XOR",
        "tag_description" : "Indicates an EITHER-OR (XOR) relationship, i.e., exclusive disjunction. The relationship is undirected."
      } ],
      "create_tag" : true
    },
    "uiName" : "Embeds Logical Combination",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Indicates that this component embeds a non-decomposed logical combination. This flag is intended to signal the need for downstream handling of this specific occurrence.",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"dynamicSize\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[]}"
  }, {
    "name" : "EmbedsInstitutionalStatement",
    "tag_set" : null,
    "uiName" : "Embeds Nested Statement",
    "type" : "uima.cas.Boolean",
    "enabled" : true,
    "visible" : false,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Indicates whether the component is or embeds an institutional statement or observational statement in its own right. This is complementary to the \"Nested Statement\" flag in the Institutional Statement layer once the nested part is annotated.",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : null
  }, {
    "name" : "ImpliesNegation",
    "tag_set" : null,
    "uiName" : "Implies Negation",
    "type" : "uima.cas.Boolean",
    "enabled" : true,
    "visible" : false,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "Indicates whether component expression implies negation (e.g., must NOT; does NOT apply to ...; No individual ...).",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : null
  }, {
    "name" : "InferredComponentValue",
    "tag_set" : null,
    "uiName" : "Inferred Component Value",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : false,
    "description" : "If the component value is largely implicit (e.g., \"it\"), this field is filled with the explicit content the component resolves to (e.g., \"the author\").",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[]}"
  }, {
    "name" : "PolicyRelationship",
    "tag_set" : {
      "name" : "IG Policy Relationships",
      "description" : "Characterize forms of policy relationships based on directionality",
      "language" : null,
      "tags" : [ {
        "tag_name" : "Policy in constituting property amends",
        "tag_description" : "Policy of concern is amended by policy referred to in constituting property"
      }, {
        "tag_name" : "Policy in constituting property is added",
        "tag_description" : "Policy specified in constituting property is added to policy of concern"
      }, {
        "tag_name" : "Policy in constituting property is removed",
        "tag_description" : "Policy specified in constituting property is removed from policy of concern"
      }, {
        "tag_name" : "Policy in constituting property substitutes",
        "tag_description" : "Policy specifies in constituting property substitutes policy of concern"
      }, {
        "tag_name" : "Policy of concern amends",
        "tag_description" : "Policy of concern (or in constituted entity) amends policy referred to in constituting property"
      }, {
        "tag_name" : "Policy of concern is added",
        "tag_description" : "Policy of concern (or in constituted entity) is added to policy referred to in constituting property"
      }, {
        "tag_name" : "Policy of concern is removed",
        "tag_description" : "Policy of concern (or in constituted entity) is removed from policy referred to in constituting property"
      }, {
        "tag_name" : "Policy of concern substitutes",
        "tag_description" : "Policy of concern (or in constituted entity) substitutes policy referred to in constituting property"
      } ],
      "create_tag" : true
    },
    "uiName" : "Policy Relationship",
    "type" : "uima.cas.String",
    "enabled" : true,
    "visible" : true,
    "include_in_hover" : false,
    "required" : false,
    "remember" : false,
    "hideUnconstraintFeature" : true,
    "description" : "Describes policy relationship between policy referred to in constituted entity and policy otherwise referred to",
    "project_name" : "IG-Inception-Layer Development",
    "multi_value_mode" : "NONE",
    "link_mode" : "NONE",
    "link_type_name" : null,
    "link_type_role_feature_name" : null,
    "link_type_target_feature_name" : null,
    "traits" : "{\"multipleRows\":false,\"collapsedRows\":1,\"expandedRows\":1,\"keyBindings\":[]}"
  } ],
  "uiName" : "IG Core Constitutive Syntax",
  "type" : "span",
  "description" : "Identifies institutional statement components for constitutive statements\r\n\r\nIG-Inception Layers Version: 0.3.0\r\nFor all versions, see https://github.com/InstitutionalGrammar/IG-Inception-Layers/releases\r\nMaintainer: C. Frantz",
  "enabled" : true,
  "built_in" : false,
  "readonly" : false,
  "attach_type" : null,
  "attach_feature" : null,
  "allow_stacking" : true,
  "cross_sentence" : true,
  "show_hover" : true,
  "anchoring_mode" : "TOKENS",
  "overlap_mode" : "ANY_OVERLAP",
  "validation_mode" : "ALWAYS",
  "lock_to_token_offset" : false,
  "multiple_tokens" : true,
  "project_name" : "IG-Inception-Layer Development",
  "linked_list_behavior" : false,
  "on_click_javascript_action" : null,
  "traits" : null
} ]